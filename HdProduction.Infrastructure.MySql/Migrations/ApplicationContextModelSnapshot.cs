// <auto-generated />
using System;
using HdProduction.HelpDesk.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HdProduction.Infrastructure.MySql.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Text")
                        .HasMaxLength(512);

                    b.Property<long>("TicketId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("AssigneeId");

                    b.Property<string>("Details")
                        .IsRequired();

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.TicketAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CommentId");

                    b.Property<long?>("NewAssigneeId");

                    b.Property<int?>("NewStatusId");

                    b.Property<long?>("OldAssigneeId");

                    b.Property<int?>("OldStatusId");

                    b.Property<long>("TicketId");

                    b.Property<DateTime>("Time");

                    b.Property<int>("Type");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.TicketAttachment", b =>
                {
                    b.Property<long>("TicketId");

                    b.Property<string>("AttachmentKey")
                        .HasMaxLength(256);

                    b.HasKey("TicketId", "AttachmentKey");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("PermissionsRaw");

                    b.Property<string>("PwdHash")
                        .IsRequired();

                    b.Property<string>("PwdSalt")
                        .IsFixedLength(true)
                        .HasMaxLength(32);

                    b.Property<string>("RefreshToken")
                        .IsFixedLength(true)
                        .HasMaxLength(44);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.Comment", b =>
                {
                    b.HasOne("HdProduction.HelpDesk.Domain.Entities.Ticket", "Ticket")
                        .WithMany("Comments")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("FK_Tickets")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HdProduction.HelpDesk.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Comments")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.TicketAction", b =>
                {
                    b.HasOne("HdProduction.HelpDesk.Domain.Entities.Ticket", "Ticket")
                        .WithMany("Actions")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HdProduction.HelpDesk.Domain.Entities.User", "User")
                        .WithMany("Actions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HdProduction.HelpDesk.Domain.Entities.TicketAttachment", b =>
                {
                    b.HasOne("HdProduction.HelpDesk.Domain.Entities.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
